<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"><html><head><title>luni/src/main/java/libcore/io/DiskLruCache.java - platform/libcore - Git at Google</title><link rel="stylesheet" type="text/css" href="//www.google.com/css/go.css" /><link rel="stylesheet" type="text/css" href="/+static/prettify/prettify.pZ5FqzM6cPxAflH0va2Ucw.cache.css" /><link rel="stylesheet" type="text/css" href="/+static/gitiles.ulPtSxtkWZbuo-xQgUb1Yg.cache.css" /></head><body><h1><img src="//www.google.com/images/logo_sm.gif" alt="Google" />Git</h1><div class="menu"> <a href="https://www.google.com/a/SelectSession?service=gerritcodereview&amp;continue=https://android.googlesource.com/login/platform/libcore/%2B/jb-mr2-release/luni/src/main/java/libcore/io/DiskLruCache.java">Sign in</a> </div><div class="breadcrumbs"><a href="/?format=HTML">android</a> / <a href="/platform/libcore/">platform/libcore</a> / <a href="/platform/libcore/+/jb-mr2-release">jb-mr2-release</a> / <a href="/platform/libcore/+/jb-mr2-release/">.</a> / <a href="/platform/libcore/+/jb-mr2-release/luni">luni</a> / <a href="/platform/libcore/+/jb-mr2-release/luni/src">src</a> / <a href="/platform/libcore/+/jb-mr2-release/luni/src/main">main</a> / <a href="/platform/libcore/+/jb-mr2-release/luni/src/main/java">java</a> / <a href="/platform/libcore/+/jb-mr2-release/luni/src/main/java/libcore">libcore</a> / <a href="/platform/libcore/+/jb-mr2-release/luni/src/main/java/libcore/io">io</a> / DiskLruCache.java</div><div class="sha1">blob: b9cc0a1543861b94a02ca44055f3c09dc4a675b8 [<a href="/platform/libcore/+/jb-mr2-release/luni/src/main/java/libcore/io/DiskLruCache.java">file</a>] [<a href="/platform/libcore/+log/jb-mr2-release/luni/src/main/java/libcore/io/DiskLruCache.java">log</a>] [<a href="/platform/libcore/+blame/jb-mr2-release/luni/src/main/java/libcore/io/DiskLruCache.java">blame</a>]</div><ol class="prettyprint"><li><a name="1"></a><span class="com">/*</span></li><li><a name="2"></a><span class="com"> * Copyright (C) 2011 The Android Open Source Project</span></li><li><a name="3"></a><span class="com"> *</span></li><li><a name="4"></a><span class="com"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></li><li><a name="5"></a><span class="com"> * you may not use this file except in compliance with the License.</span></li><li><a name="6"></a><span class="com"> * You may obtain a copy of the License at</span></li><li><a name="7"></a><span class="com"> *</span></li><li><a name="8"></a><span class="com"> *      http://www.apache.org/licenses/LICENSE-2.0</span></li><li><a name="9"></a><span class="com"> *</span></li><li><a name="10"></a><span class="com"> * Unless required by applicable law or agreed to in writing, software</span></li><li><a name="11"></a><span class="com"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></li><li><a name="12"></a><span class="com"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></li><li><a name="13"></a><span class="com"> * See the License for the specific language governing permissions and</span></li><li><a name="14"></a><span class="com"> * limitations under the License.</span></li><li><a name="15"></a><span class="com"> */</span></li><li><a name="16"></a></li><li><a name="17"></a><span class="kwd">package</span><span class="pln"> libcore</span><span class="pun">.</span><span class="pln">io</span><span class="pun">;</span></li><li><a name="18"></a></li><li><a name="19"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">BufferedWriter</span><span class="pun">;</span></li><li><a name="20"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">Closeable</span><span class="pun">;</span></li><li><a name="21"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">EOFException</span><span class="pun">;</span></li><li><a name="22"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">File</span><span class="pun">;</span></li><li><a name="23"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">FileInputStream</span><span class="pun">;</span></li><li><a name="24"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">FileNotFoundException</span><span class="pun">;</span></li><li><a name="25"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">FileOutputStream</span><span class="pun">;</span></li><li><a name="26"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">FileWriter</span><span class="pun">;</span></li><li><a name="27"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">FilterOutputStream</span><span class="pun">;</span></li><li><a name="28"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">IOException</span><span class="pun">;</span></li><li><a name="29"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">InputStream</span><span class="pun">;</span></li><li><a name="30"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">InputStreamReader</span><span class="pun">;</span></li><li><a name="31"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">OutputStream</span><span class="pun">;</span></li><li><a name="32"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">OutputStreamWriter</span><span class="pun">;</span></li><li><a name="33"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">Writer</span><span class="pun">;</span></li><li><a name="34"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">nio</span><span class="pun">.</span><span class="pln">charset</span><span class="pun">.</span><span class="typ">Charsets</span><span class="pun">;</span></li><li><a name="35"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">ArrayList</span><span class="pun">;</span></li><li><a name="36"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">Arrays</span><span class="pun">;</span></li><li><a name="37"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">Iterator</span><span class="pun">;</span></li><li><a name="38"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">LinkedHashMap</span><span class="pun">;</span></li><li><a name="39"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">Map</span><span class="pun">;</span></li><li><a name="40"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="pln">concurrent</span><span class="pun">.</span><span class="typ">Callable</span><span class="pun">;</span></li><li><a name="41"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="pln">concurrent</span><span class="pun">.</span><span class="typ">ExecutorService</span><span class="pun">;</span></li><li><a name="42"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="pln">concurrent</span><span class="pun">.</span><span class="typ">LinkedBlockingQueue</span><span class="pun">;</span></li><li><a name="43"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="pln">concurrent</span><span class="pun">.</span><span class="typ">ThreadPoolExecutor</span><span class="pun">;</span></li><li><a name="44"></a><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="pln">concurrent</span><span class="pun">.</span><span class="typ">TimeUnit</span><span class="pun">;</span></li><li><a name="45"></a></li><li><a name="46"></a><span class="com">/**</span></li><li><a name="47"></a><span class="com"> * A cache that uses a bounded amount of space on a filesystem. Each cache</span></li><li><a name="48"></a><span class="com"> * entry has a string key and a fixed number of values. Values are byte</span></li><li><a name="49"></a><span class="com"> * sequences, accessible as streams or files. Each value must be between {@code</span></li><li><a name="50"></a><span class="com"> * 0} and {@code Integer.MAX_VALUE} bytes in length.</span></li><li><a name="51"></a><span class="com"> *</span></li><li><a name="52"></a><span class="com"> * &lt;p&gt;The cache stores its data in a directory on the filesystem. This</span></li><li><a name="53"></a><span class="com"> * directory must be exclusive to the cache; the cache may delete or overwrite</span></li><li><a name="54"></a><span class="com"> * files from its directory. It is an error for multiple processes to use the</span></li><li><a name="55"></a><span class="com"> * same cache directory at the same time.</span></li><li><a name="56"></a><span class="com"> *</span></li><li><a name="57"></a><span class="com"> * &lt;p&gt;This cache limits the number of bytes that it will store on the</span></li><li><a name="58"></a><span class="com"> * filesystem. When the number of stored bytes exceeds the limit, the cache will</span></li><li><a name="59"></a><span class="com"> * remove entries in the background until the limit is satisfied. The limit is</span></li><li><a name="60"></a><span class="com"> * not strict: the cache may temporarily exceed it while waiting for files to be</span></li><li><a name="61"></a><span class="com"> * deleted. The limit does not include filesystem overhead or the cache</span></li><li><a name="62"></a><span class="com"> * journal so space-sensitive applications should set a conservative limit.</span></li><li><a name="63"></a><span class="com"> *</span></li><li><a name="64"></a><span class="com"> * &lt;p&gt;Clients call {@link #edit} to create or update the values of an entry. An</span></li><li><a name="65"></a><span class="com"> * entry may have only one editor at one time; if a value is not available to be</span></li><li><a name="66"></a><span class="com"> * edited then {@link #edit} will return null.</span></li><li><a name="67"></a><span class="com"> * &lt;ul&gt;</span></li><li><a name="68"></a><span class="com"> *     &lt;li&gt;When an entry is being &lt;strong&gt;created&lt;/strong&gt; it is necessary to</span></li><li><a name="69"></a><span class="com"> *         supply a full set of values; the empty value should be used as a</span></li><li><a name="70"></a><span class="com"> *         placeholder if necessary.</span></li><li><a name="71"></a><span class="com"> *     &lt;li&gt;When an entry is being &lt;strong&gt;edited&lt;/strong&gt;, it is not necessary</span></li><li><a name="72"></a><span class="com"> *         to supply data for every value; values default to their previous</span></li><li><a name="73"></a><span class="com"> *         value.</span></li><li><a name="74"></a><span class="com"> * &lt;/ul&gt;</span></li><li><a name="75"></a><span class="com"> * Every {@link #edit} call must be matched by a call to {@link Editor#commit}</span></li><li><a name="76"></a><span class="com"> * or {@link Editor#abort}. Committing is atomic: a read observes the full set</span></li><li><a name="77"></a><span class="com"> * of values as they were before or after the commit, but never a mix of values.</span></li><li><a name="78"></a><span class="com"> *</span></li><li><a name="79"></a><span class="com"> * &lt;p&gt;Clients call {@link #get} to read a snapshot of an entry. The read will</span></li><li><a name="80"></a><span class="com"> * observe the value at the time that {@link #get} was called. Updates and</span></li><li><a name="81"></a><span class="com"> * removals after the call do not impact ongoing reads.</span></li><li><a name="82"></a><span class="com"> *</span></li><li><a name="83"></a><span class="com"> * &lt;p&gt;This class is tolerant of some I/O errors. If files are missing from the</span></li><li><a name="84"></a><span class="com"> * filesystem, the corresponding entries will be dropped from the cache. If</span></li><li><a name="85"></a><span class="com"> * an error occurs while writing a cache value, the edit will fail silently.</span></li><li><a name="86"></a><span class="com"> * Callers should handle other problems by catching {@code IOException} and</span></li><li><a name="87"></a><span class="com"> * responding appropriately.</span></li><li><a name="88"></a><span class="com"> */</span></li><li><a name="89"></a><span class="kwd">public</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">DiskLruCache</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Closeable</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="90"></a><span class="pln">    </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> JOURNAL_FILE </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;journal&quot;</span><span class="pun">;</span></li><li><a name="91"></a><span class="pln">    </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> JOURNAL_FILE_TMP </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;journal.tmp&quot;</span><span class="pun">;</span></li><li><a name="92"></a><span class="pln">    </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> MAGIC </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;libcore.io.DiskLruCache&quot;</span><span class="pun">;</span></li><li><a name="93"></a><span class="pln">    </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> VERSION_1 </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;1&quot;</span><span class="pun">;</span></li><li><a name="94"></a><span class="pln">    </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> ANY_SEQUENCE_NUMBER </span><span class="pun">=</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">;</span></li><li><a name="95"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> CLEAN </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;CLEAN&quot;</span><span class="pun">;</span></li><li><a name="96"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> DIRTY </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;DIRTY&quot;</span><span class="pun">;</span></li><li><a name="97"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> REMOVE </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;REMOVE&quot;</span><span class="pun">;</span></li><li><a name="98"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> READ </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;READ&quot;</span><span class="pun">;</span></li><li><a name="99"></a></li><li><a name="100"></a><span class="pln">    </span><span class="com">/*</span></li><li><a name="101"></a><span class="com">     * This cache uses a journal file named &quot;journal&quot;. A typical journal file</span></li><li><a name="102"></a><span class="com">     * looks like this:</span></li><li><a name="103"></a><span class="com">     *     libcore.io.DiskLruCache</span></li><li><a name="104"></a><span class="com">     *     1</span></li><li><a name="105"></a><span class="com">     *     100</span></li><li><a name="106"></a><span class="com">     *     2</span></li><li><a name="107"></a><span class="com">     *</span></li><li><a name="108"></a><span class="com">     *     CLEAN 3400330d1dfc7f3f7f4b8d4d803dfcf6 832 21054</span></li><li><a name="109"></a><span class="com">     *     DIRTY 335c4c6028171cfddfbaae1a9c313c52</span></li><li><a name="110"></a><span class="com">     *     CLEAN 335c4c6028171cfddfbaae1a9c313c52 3934 2342</span></li><li><a name="111"></a><span class="com">     *     REMOVE 335c4c6028171cfddfbaae1a9c313c52</span></li><li><a name="112"></a><span class="com">     *     DIRTY 1ab96a171faeeee38496d8b330771a7a</span></li><li><a name="113"></a><span class="com">     *     CLEAN 1ab96a171faeeee38496d8b330771a7a 1600 234</span></li><li><a name="114"></a><span class="com">     *     READ 335c4c6028171cfddfbaae1a9c313c52</span></li><li><a name="115"></a><span class="com">     *     READ 3400330d1dfc7f3f7f4b8d4d803dfcf6</span></li><li><a name="116"></a><span class="com">     *</span></li><li><a name="117"></a><span class="com">     * The first five lines of the journal form its header. They are the</span></li><li><a name="118"></a><span class="com">     * constant string &quot;libcore.io.DiskLruCache&quot;, the disk cache&#39;s version,</span></li><li><a name="119"></a><span class="com">     * the application&#39;s version, the value count, and a blank line.</span></li><li><a name="120"></a><span class="com">     *</span></li><li><a name="121"></a><span class="com">     * Each of the subsequent lines in the file is a record of the state of a</span></li><li><a name="122"></a><span class="com">     * cache entry. Each line contains space-separated values: a state, a key,</span></li><li><a name="123"></a><span class="com">     * and optional state-specific values.</span></li><li><a name="124"></a><span class="com">     *   o DIRTY lines track that an entry is actively being created or updated.</span></li><li><a name="125"></a><span class="com">     *     Every successful DIRTY action should be followed by a CLEAN or REMOVE</span></li><li><a name="126"></a><span class="com">     *     action. DIRTY lines without a matching CLEAN or REMOVE indicate that</span></li><li><a name="127"></a><span class="com">     *     temporary files may need to be deleted.</span></li><li><a name="128"></a><span class="com">     *   o CLEAN lines track a cache entry that has been successfully published</span></li><li><a name="129"></a><span class="com">     *     and may be read. A publish line is followed by the lengths of each of</span></li><li><a name="130"></a><span class="com">     *     its values.</span></li><li><a name="131"></a><span class="com">     *   o READ lines track accesses for LRU.</span></li><li><a name="132"></a><span class="com">     *   o REMOVE lines track entries that have been deleted.</span></li><li><a name="133"></a><span class="com">     *</span></li><li><a name="134"></a><span class="com">     * The journal file is appended to as cache operations occur. The journal may</span></li><li><a name="135"></a><span class="com">     * occasionally be compacted by dropping redundant lines. A temporary file named</span></li><li><a name="136"></a><span class="com">     * &quot;journal.tmp&quot; will be used during compaction; that file should be deleted if</span></li><li><a name="137"></a><span class="com">     * it exists when the cache is opened.</span></li><li><a name="138"></a><span class="com">     */</span></li><li><a name="139"></a></li><li><a name="140"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">File</span><span class="pln"> directory</span><span class="pun">;</span></li><li><a name="141"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">File</span><span class="pln"> journalFile</span><span class="pun">;</span></li><li><a name="142"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">File</span><span class="pln"> journalFileTmp</span><span class="pun">;</span></li><li><a name="143"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> appVersion</span><span class="pun">;</span></li><li><a name="144"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> maxSize</span><span class="pun">;</span></li><li><a name="145"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> valueCount</span><span class="pun">;</span></li><li><a name="146"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> size </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></li><li><a name="147"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Writer</span><span class="pln"> journalWriter</span><span class="pun">;</span></li><li><a name="148"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">LinkedHashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Entry</span><span class="pun">&gt;</span><span class="pln"> lruEntries</span></li><li><a name="149"></a><span class="pln">            </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LinkedHashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Entry</span><span class="pun">&gt;(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span></li><li><a name="150"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> redundantOpCount</span><span class="pun">;</span></li><li><a name="151"></a></li><li><a name="152"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="153"></a><span class="com">     * To differentiate between old and current snapshots, each entry is given</span></li><li><a name="154"></a><span class="com">     * a sequence number each time an edit is committed. A snapshot is stale if</span></li><li><a name="155"></a><span class="com">     * its sequence number is not equal to its entry&#39;s sequence number.</span></li><li><a name="156"></a><span class="com">     */</span></li><li><a name="157"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> nextSequenceNumber </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></li><li><a name="158"></a></li><li><a name="159"></a><span class="pln">    </span><span class="com">/** This cache uses a single background thread to evict entries. */</span></li><li><a name="160"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">ExecutorService</span><span class="pln"> executorService </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ThreadPoolExecutor</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span></li><li><a name="161"></a><span class="pln">            </span><span class="lit">60L</span><span class="pun">,</span><span class="pln"> </span><span class="typ">TimeUnit</span><span class="pun">.</span><span class="pln">SECONDS</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LinkedBlockingQueue</span><span class="pun">&lt;</span><span class="typ">Runnable</span><span class="pun">&gt;());</span></li><li><a name="162"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">Callable</span><span class="pun">&lt;</span><span class="typ">Void</span><span class="pun">&gt;</span><span class="pln"> cleanupCallable </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Callable</span><span class="pun">&lt;</span><span class="typ">Void</span><span class="pun">&gt;()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="163"></a><span class="pln">        </span><span class="lit">@Override</span><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Void</span><span class="pln"> call</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="164"></a><span class="pln">            </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="typ">DiskLruCache</span><span class="pun">.</span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="165"></a><span class="pln">                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">journalWriter </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="166"></a><span class="pln">                    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln"> </span><span class="com">// closed</span></li><li><a name="167"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="168"></a><span class="pln">                trimToSize</span><span class="pun">();</span></li><li><a name="169"></a><span class="pln">                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">journalRebuildRequired</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="170"></a><span class="pln">                    rebuildJournal</span><span class="pun">();</span></li><li><a name="171"></a><span class="pln">                    redundantOpCount </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></li><li><a name="172"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="173"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="174"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="175"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="176"></a><span class="pln">    </span><span class="pun">};</span></li><li><a name="177"></a></li><li><a name="178"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">DiskLruCache</span><span class="pun">(</span><span class="typ">File</span><span class="pln"> directory</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> appVersion</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> valueCount</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> maxSize</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="179"></a><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">directory </span><span class="pun">=</span><span class="pln"> directory</span><span class="pun">;</span></li><li><a name="180"></a><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">appVersion </span><span class="pun">=</span><span class="pln"> appVersion</span><span class="pun">;</span></li><li><a name="181"></a><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">journalFile </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">File</span><span class="pun">(</span><span class="pln">directory</span><span class="pun">,</span><span class="pln"> JOURNAL_FILE</span><span class="pun">);</span></li><li><a name="182"></a><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">journalFileTmp </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">File</span><span class="pun">(</span><span class="pln">directory</span><span class="pun">,</span><span class="pln"> JOURNAL_FILE_TMP</span><span class="pun">);</span></li><li><a name="183"></a><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">valueCount </span><span class="pun">=</span><span class="pln"> valueCount</span><span class="pun">;</span></li><li><a name="184"></a><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">maxSize </span><span class="pun">=</span><span class="pln"> maxSize</span><span class="pun">;</span></li><li><a name="185"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="186"></a></li><li><a name="187"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="188"></a><span class="com">     * Opens the cache in {@code directory}, creating a cache if none exists</span></li><li><a name="189"></a><span class="com">     * there.</span></li><li><a name="190"></a><span class="com">     *</span></li><li><a name="191"></a><span class="com">     * @param directory a writable directory</span></li><li><a name="192"></a><span class="com">     * @param appVersion</span></li><li><a name="193"></a><span class="com">     * @param valueCount the number of values per cache entry. Must be positive.</span></li><li><a name="194"></a><span class="com">     * @param maxSize the maximum number of bytes this cache should use to store</span></li><li><a name="195"></a><span class="com">     * @throws IOException if reading or writing the cache directory fails</span></li><li><a name="196"></a><span class="com">     */</span></li><li><a name="197"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">DiskLruCache</span><span class="pln"> open</span><span class="pun">(</span><span class="typ">File</span><span class="pln"> directory</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> appVersion</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> valueCount</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> maxSize</span><span class="pun">)</span></li><li><a name="198"></a><span class="pln">            </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="199"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">maxSize </span><span class="pun">&lt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="200"></a><span class="pln">            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="str">&quot;maxSize &lt;= 0&quot;</span><span class="pun">);</span></li><li><a name="201"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="202"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">valueCount </span><span class="pun">&lt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="203"></a><span class="pln">            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="str">&quot;valueCount &lt;= 0&quot;</span><span class="pun">);</span></li><li><a name="204"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="205"></a></li><li><a name="206"></a><span class="pln">        </span><span class="com">// prefer to pick up where we left off</span></li><li><a name="207"></a><span class="pln">        </span><span class="typ">DiskLruCache</span><span class="pln"> cache </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DiskLruCache</span><span class="pun">(</span><span class="pln">directory</span><span class="pun">,</span><span class="pln"> appVersion</span><span class="pun">,</span><span class="pln"> valueCount</span><span class="pun">,</span><span class="pln"> maxSize</span><span class="pun">);</span></li><li><a name="208"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">cache</span><span class="pun">.</span><span class="pln">journalFile</span><span class="pun">.</span><span class="pln">exists</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="209"></a><span class="pln">            </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="210"></a><span class="pln">                cache</span><span class="pun">.</span><span class="pln">readJournal</span><span class="pun">();</span></li><li><a name="211"></a><span class="pln">                cache</span><span class="pun">.</span><span class="pln">processJournal</span><span class="pun">();</span></li><li><a name="212"></a><span class="pln">                cache</span><span class="pun">.</span><span class="pln">journalWriter </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BufferedWriter</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileWriter</span><span class="pun">(</span><span class="pln">cache</span><span class="pun">.</span><span class="pln">journalFile</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">));</span></li><li><a name="213"></a><span class="pln">                </span><span class="kwd">return</span><span class="pln"> cache</span><span class="pun">;</span></li><li><a name="214"></a><span class="pln">            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> journalIsCorrupt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="215"></a><span class="pln">                </span><span class="typ">System</span><span class="pun">.</span><span class="pln">logW</span><span class="pun">(</span><span class="str">&quot;DiskLruCache &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> directory </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot; is corrupt: &quot;</span></li><li><a name="216"></a><span class="pln">                        </span><span class="pun">+</span><span class="pln"> journalIsCorrupt</span><span class="pun">.</span><span class="pln">getMessage</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot;, removing&quot;</span><span class="pun">);</span></li><li><a name="217"></a><span class="pln">                cache</span><span class="pun">.</span><span class="kwd">delete</span><span class="pun">();</span></li><li><a name="218"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="219"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="220"></a></li><li><a name="221"></a><span class="pln">        </span><span class="com">// create a new empty cache</span></li><li><a name="222"></a><span class="pln">        directory</span><span class="pun">.</span><span class="pln">mkdirs</span><span class="pun">();</span></li><li><a name="223"></a><span class="pln">        cache </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DiskLruCache</span><span class="pun">(</span><span class="pln">directory</span><span class="pun">,</span><span class="pln"> appVersion</span><span class="pun">,</span><span class="pln"> valueCount</span><span class="pun">,</span><span class="pln"> maxSize</span><span class="pun">);</span></li><li><a name="224"></a><span class="pln">        cache</span><span class="pun">.</span><span class="pln">rebuildJournal</span><span class="pun">();</span></li><li><a name="225"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> cache</span><span class="pun">;</span></li><li><a name="226"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="227"></a></li><li><a name="228"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> readJournal</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="229"></a><span class="pln">        </span><span class="typ">StrictLineReader</span><span class="pln"> reader </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">StrictLineReader</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileInputStream</span><span class="pun">(</span><span class="pln">journalFile</span><span class="pun">),</span></li><li><a name="230"></a><span class="pln">                </span><span class="typ">Charsets</span><span class="pun">.</span><span class="pln">US_ASCII</span><span class="pun">);</span></li><li><a name="231"></a><span class="pln">        </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="232"></a><span class="pln">            </span><span class="typ">String</span><span class="pln"> magic </span><span class="pun">=</span><span class="pln"> reader</span><span class="pun">.</span><span class="pln">readLine</span><span class="pun">();</span></li><li><a name="233"></a><span class="pln">            </span><span class="typ">String</span><span class="pln"> version </span><span class="pun">=</span><span class="pln"> reader</span><span class="pun">.</span><span class="pln">readLine</span><span class="pun">();</span></li><li><a name="234"></a><span class="pln">            </span><span class="typ">String</span><span class="pln"> appVersionString </span><span class="pun">=</span><span class="pln"> reader</span><span class="pun">.</span><span class="pln">readLine</span><span class="pun">();</span></li><li><a name="235"></a><span class="pln">            </span><span class="typ">String</span><span class="pln"> valueCountString </span><span class="pun">=</span><span class="pln"> reader</span><span class="pun">.</span><span class="pln">readLine</span><span class="pun">();</span></li><li><a name="236"></a><span class="pln">            </span><span class="typ">String</span><span class="pln"> blank </span><span class="pun">=</span><span class="pln"> reader</span><span class="pun">.</span><span class="pln">readLine</span><span class="pun">();</span></li><li><a name="237"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">MAGIC</span><span class="pun">.</span><span class="pln">equals</span><span class="pun">(</span><span class="pln">magic</span><span class="pun">)</span></li><li><a name="238"></a><span class="pln">                    </span><span class="pun">||</span><span class="pln"> </span><span class="pun">!</span><span class="pln">VERSION_1</span><span class="pun">.</span><span class="pln">equals</span><span class="pun">(</span><span class="pln">version</span><span class="pun">)</span></li><li><a name="239"></a><span class="pln">                    </span><span class="pun">||</span><span class="pln"> </span><span class="pun">!</span><span class="typ">Integer</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">(</span><span class="pln">appVersion</span><span class="pun">).</span><span class="pln">equals</span><span class="pun">(</span><span class="pln">appVersionString</span><span class="pun">)</span></li><li><a name="240"></a><span class="pln">                    </span><span class="pun">||</span><span class="pln"> </span><span class="pun">!</span><span class="typ">Integer</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">(</span><span class="pln">valueCount</span><span class="pun">).</span><span class="pln">equals</span><span class="pun">(</span><span class="pln">valueCountString</span><span class="pun">)</span></li><li><a name="241"></a><span class="pln">                    </span><span class="pun">||</span><span class="pln"> </span><span class="pun">!</span><span class="str">&quot;&quot;</span><span class="pun">.</span><span class="pln">equals</span><span class="pun">(</span><span class="pln">blank</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="242"></a><span class="pln">                </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IOException</span><span class="pun">(</span><span class="str">&quot;unexpected journal header: [&quot;</span></li><li><a name="243"></a><span class="pln">                        </span><span class="pun">+</span><span class="pln"> magic </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot;, &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> version </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot;, &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> valueCountString </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot;, &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> blank </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot;]&quot;</span><span class="pun">);</span></li><li><a name="244"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="245"></a></li><li><a name="246"></a><span class="pln">            </span><span class="kwd">int</span><span class="pln"> lineCount </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></li><li><a name="247"></a><span class="pln">            </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="248"></a><span class="pln">                </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="249"></a><span class="pln">                    readJournalLine</span><span class="pun">(</span><span class="pln">reader</span><span class="pun">.</span><span class="pln">readLine</span><span class="pun">());</span></li><li><a name="250"></a><span class="pln">                    lineCount</span><span class="pun">++;</span></li><li><a name="251"></a><span class="pln">                </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">EOFException</span><span class="pln"> endOfJournal</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="252"></a><span class="pln">                    </span><span class="kwd">break</span><span class="pun">;</span></li><li><a name="253"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="254"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="255"></a><span class="pln">            redundantOpCount </span><span class="pun">=</span><span class="pln"> lineCount </span><span class="pun">-</span><span class="pln"> lruEntries</span><span class="pun">.</span><span class="pln">size</span><span class="pun">();</span></li><li><a name="256"></a><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">finally</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="257"></a><span class="pln">            </span><span class="typ">IoUtils</span><span class="pun">.</span><span class="pln">closeQuietly</span><span class="pun">(</span><span class="pln">reader</span><span class="pun">);</span></li><li><a name="258"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="259"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="260"></a></li><li><a name="261"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> readJournalLine</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> line</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="262"></a><span class="pln">        </span><span class="kwd">int</span><span class="pln"> firstSpace </span><span class="pun">=</span><span class="pln"> line</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(</span><span class="str">&#39; &#39;</span><span class="pun">);</span></li><li><a name="263"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">firstSpace </span><span class="pun">==</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="264"></a><span class="pln">            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IOException</span><span class="pun">(</span><span class="str">&quot;unexpected journal line: &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> line</span><span class="pun">);</span></li><li><a name="265"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="266"></a></li><li><a name="267"></a><span class="pln">        </span><span class="kwd">int</span><span class="pln"> keyBegin </span><span class="pun">=</span><span class="pln"> firstSpace </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span></li><li><a name="268"></a><span class="pln">        </span><span class="kwd">int</span><span class="pln"> secondSpace </span><span class="pun">=</span><span class="pln"> line</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(</span><span class="str">&#39; &#39;</span><span class="pun">,</span><span class="pln"> keyBegin</span><span class="pun">);</span></li><li><a name="269"></a><span class="pln">        </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> key</span><span class="pun">;</span></li><li><a name="270"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">secondSpace </span><span class="pun">==</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="271"></a><span class="pln">            key </span><span class="pun">=</span><span class="pln"> line</span><span class="pun">.</span><span class="pln">substring</span><span class="pun">(</span><span class="pln">keyBegin</span><span class="pun">);</span></li><li><a name="272"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">firstSpace </span><span class="pun">==</span><span class="pln"> REMOVE</span><span class="pun">.</span><span class="pln">length</span><span class="pun">()</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> line</span><span class="pun">.</span><span class="pln">startsWith</span><span class="pun">(</span><span class="pln">REMOVE</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="273"></a><span class="pln">                lruEntries</span><span class="pun">.</span><span class="pln">remove</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="274"></a><span class="pln">                </span><span class="kwd">return</span><span class="pun">;</span></li><li><a name="275"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="276"></a><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="277"></a><span class="pln">            key </span><span class="pun">=</span><span class="pln"> line</span><span class="pun">.</span><span class="pln">substring</span><span class="pun">(</span><span class="pln">keyBegin</span><span class="pun">,</span><span class="pln"> secondSpace</span><span class="pun">);</span></li><li><a name="278"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="279"></a></li><li><a name="280"></a><span class="pln">        </span><span class="typ">Entry</span><span class="pln"> entry </span><span class="pun">=</span><span class="pln"> lruEntries</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="281"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="282"></a><span class="pln">            entry </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Entry</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="283"></a><span class="pln">            lruEntries</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> entry</span><span class="pun">);</span></li><li><a name="284"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="285"></a></li><li><a name="286"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">secondSpace </span><span class="pun">!=</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> firstSpace </span><span class="pun">==</span><span class="pln"> CLEAN</span><span class="pun">.</span><span class="pln">length</span><span class="pun">()</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> line</span><span class="pun">.</span><span class="pln">startsWith</span><span class="pun">(</span><span class="pln">CLEAN</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="287"></a><span class="pln">            </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> parts </span><span class="pun">=</span><span class="pln"> line</span><span class="pun">.</span><span class="pln">substring</span><span class="pun">(</span><span class="pln">secondSpace </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">).</span><span class="pln">split</span><span class="pun">(</span><span class="str">&quot; &quot;</span><span class="pun">);</span></li><li><a name="288"></a><span class="pln">            entry</span><span class="pun">.</span><span class="pln">readable </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span></li><li><a name="289"></a><span class="pln">            entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="290"></a><span class="pln">            entry</span><span class="pun">.</span><span class="pln">setLengths</span><span class="pun">(</span><span class="pln">parts</span><span class="pun">);</span></li><li><a name="291"></a><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">secondSpace </span><span class="pun">==</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> firstSpace </span><span class="pun">==</span><span class="pln"> DIRTY</span><span class="pun">.</span><span class="pln">length</span><span class="pun">()</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> line</span><span class="pun">.</span><span class="pln">startsWith</span><span class="pun">(</span><span class="pln">DIRTY</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="292"></a><span class="pln">            entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Editor</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">);</span></li><li><a name="293"></a><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">secondSpace </span><span class="pun">==</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> firstSpace </span><span class="pun">==</span><span class="pln"> READ</span><span class="pun">.</span><span class="pln">length</span><span class="pun">()</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> line</span><span class="pun">.</span><span class="pln">startsWith</span><span class="pun">(</span><span class="pln">READ</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="294"></a><span class="pln">            </span><span class="com">// this work was already done by calling lruEntries.get()</span></li><li><a name="295"></a><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="296"></a><span class="pln">            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IOException</span><span class="pun">(</span><span class="str">&quot;unexpected journal line: &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> line</span><span class="pun">);</span></li><li><a name="297"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="298"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="299"></a></li><li><a name="300"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="301"></a><span class="com">     * Computes the initial size and collects garbage as a part of opening the</span></li><li><a name="302"></a><span class="com">     * cache. Dirty entries are assumed to be inconsistent and will be deleted.</span></li><li><a name="303"></a><span class="com">     */</span></li><li><a name="304"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> processJournal</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="305"></a><span class="pln">        deleteIfExists</span><span class="pun">(</span><span class="pln">journalFileTmp</span><span class="pun">);</span></li><li><a name="306"></a><span class="pln">        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Iterator</span><span class="pun">&lt;</span><span class="typ">Entry</span><span class="pun">&gt;</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> lruEntries</span><span class="pun">.</span><span class="pln">values</span><span class="pun">().</span><span class="pln">iterator</span><span class="pun">();</span><span class="pln"> i</span><span class="pun">.</span><span class="pln">hasNext</span><span class="pun">();</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="307"></a><span class="pln">            </span><span class="typ">Entry</span><span class="pln"> entry </span><span class="pun">=</span><span class="pln"> i</span><span class="pun">.</span><span class="pln">next</span><span class="pun">();</span></li><li><a name="308"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="309"></a><span class="pln">                </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> t </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> t </span><span class="pun">&lt;</span><span class="pln"> valueCount</span><span class="pun">;</span><span class="pln"> t</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="310"></a><span class="pln">                    size </span><span class="pun">+=</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">lengths</span><span class="pun">[</span><span class="pln">t</span><span class="pun">];</span></li><li><a name="311"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="312"></a><span class="pln">            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="313"></a><span class="pln">                entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="314"></a><span class="pln">                </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> t </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> t </span><span class="pun">&lt;</span><span class="pln"> valueCount</span><span class="pun">;</span><span class="pln"> t</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="315"></a><span class="pln">                    deleteIfExists</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">getCleanFile</span><span class="pun">(</span><span class="pln">t</span><span class="pun">));</span></li><li><a name="316"></a><span class="pln">                    deleteIfExists</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">getDirtyFile</span><span class="pun">(</span><span class="pln">t</span><span class="pun">));</span></li><li><a name="317"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="318"></a><span class="pln">                i</span><span class="pun">.</span><span class="pln">remove</span><span class="pun">();</span></li><li><a name="319"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="320"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="321"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="322"></a></li><li><a name="323"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="324"></a><span class="com">     * Creates a new journal that omits redundant information. This replaces the</span></li><li><a name="325"></a><span class="com">     * current journal if it exists.</span></li><li><a name="326"></a><span class="com">     */</span></li><li><a name="327"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> rebuildJournal</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="328"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">journalWriter </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="329"></a><span class="pln">            journalWriter</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span></li><li><a name="330"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="331"></a></li><li><a name="332"></a><span class="pln">        </span><span class="typ">Writer</span><span class="pln"> writer </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BufferedWriter</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileWriter</span><span class="pun">(</span><span class="pln">journalFileTmp</span><span class="pun">));</span></li><li><a name="333"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">MAGIC</span><span class="pun">);</span></li><li><a name="334"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="str">&quot;\n&quot;</span><span class="pun">);</span></li><li><a name="335"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">VERSION_1</span><span class="pun">);</span></li><li><a name="336"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="str">&quot;\n&quot;</span><span class="pun">);</span></li><li><a name="337"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="typ">Integer</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">(</span><span class="pln">appVersion</span><span class="pun">));</span></li><li><a name="338"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="str">&quot;\n&quot;</span><span class="pun">);</span></li><li><a name="339"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="typ">Integer</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">(</span><span class="pln">valueCount</span><span class="pun">));</span></li><li><a name="340"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="str">&quot;\n&quot;</span><span class="pun">);</span></li><li><a name="341"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="str">&quot;\n&quot;</span><span class="pun">);</span></li><li><a name="342"></a></li><li><a name="343"></a><span class="pln">        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Entry</span><span class="pln"> entry </span><span class="pun">:</span><span class="pln"> lruEntries</span><span class="pun">.</span><span class="pln">values</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="344"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="345"></a><span class="pln">                writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">DIRTY </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39; &#39;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">key </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39;\n&#39;</span><span class="pun">);</span></li><li><a name="346"></a><span class="pln">            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="347"></a><span class="pln">                writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">CLEAN </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39; &#39;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">key </span><span class="pun">+</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">getLengths</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39;\n&#39;</span><span class="pun">);</span></li><li><a name="348"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="349"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="350"></a></li><li><a name="351"></a><span class="pln">        writer</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span></li><li><a name="352"></a><span class="pln">        journalFileTmp</span><span class="pun">.</span><span class="pln">renameTo</span><span class="pun">(</span><span class="pln">journalFile</span><span class="pun">);</span></li><li><a name="353"></a><span class="pln">        journalWriter </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BufferedWriter</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileWriter</span><span class="pun">(</span><span class="pln">journalFile</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">));</span></li><li><a name="354"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="355"></a></li><li><a name="356"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> deleteIfExists</span><span class="pun">(</span><span class="typ">File</span><span class="pln"> file</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="357"></a><span class="pln">        </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="358"></a><span class="pln">            </span><span class="typ">Libcore</span><span class="pun">.</span><span class="pln">os</span><span class="pun">.</span><span class="pln">remove</span><span class="pun">(</span><span class="pln">file</span><span class="pun">.</span><span class="pln">getPath</span><span class="pun">());</span></li><li><a name="359"></a><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ErrnoException</span><span class="pln"> errnoException</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="360"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">errnoException</span><span class="pun">.</span><span class="pln">errno </span><span class="pun">!=</span><span class="pln"> </span><span class="typ">OsConstants</span><span class="pun">.</span><span class="pln">ENOENT</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="361"></a><span class="pln">                </span><span class="kwd">throw</span><span class="pln"> errnoException</span><span class="pun">.</span><span class="pln">rethrowAsIOException</span><span class="pun">();</span></li><li><a name="362"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="363"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="364"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="365"></a></li><li><a name="366"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="367"></a><span class="com">     * Returns a snapshot of the entry named {@code key}, or null if it doesn&#39;t</span></li><li><a name="368"></a><span class="com">     * exist is not currently readable. If a value is returned, it is moved to</span></li><li><a name="369"></a><span class="com">     * the head of the LRU queue.</span></li><li><a name="370"></a><span class="com">     */</span></li><li><a name="371"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="typ">Snapshot</span><span class="pln"> get</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> key</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="372"></a><span class="pln">        checkNotClosed</span><span class="pun">();</span></li><li><a name="373"></a><span class="pln">        validateKey</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="374"></a><span class="pln">        </span><span class="typ">Entry</span><span class="pln"> entry </span><span class="pun">=</span><span class="pln"> lruEntries</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="375"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="376"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="377"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="378"></a></li><li><a name="379"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">readable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="380"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="381"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="382"></a></li><li><a name="383"></a><span class="pln">        </span><span class="com">/*</span></li><li><a name="384"></a><span class="com">         * Open all streams eagerly to guarantee that we see a single published</span></li><li><a name="385"></a><span class="com">         * snapshot. If we opened streams lazily then the streams could come</span></li><li><a name="386"></a><span class="com">         * from different edits.</span></li><li><a name="387"></a><span class="com">         */</span></li><li><a name="388"></a><span class="pln">        </span><span class="typ">InputStream</span><span class="pun">[]</span><span class="pln"> ins </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">InputStream</span><span class="pun">[</span><span class="pln">valueCount</span><span class="pun">];</span></li><li><a name="389"></a><span class="pln">        </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="390"></a><span class="pln">            </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> valueCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="391"></a><span class="pln">                ins</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileInputStream</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">getCleanFile</span><span class="pun">(</span><span class="pln">i</span><span class="pun">));</span></li><li><a name="392"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="393"></a><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">FileNotFoundException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="394"></a><span class="pln">            </span><span class="com">// a file must have been deleted manually!</span></li><li><a name="395"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="396"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="397"></a></li><li><a name="398"></a><span class="pln">        redundantOpCount</span><span class="pun">++;</span></li><li><a name="399"></a><span class="pln">        journalWriter</span><span class="pun">.</span><span class="pln">append</span><span class="pun">(</span><span class="pln">READ </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39; &#39;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> key </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39;\n&#39;</span><span class="pun">);</span></li><li><a name="400"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">journalRebuildRequired</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="401"></a><span class="pln">            executorService</span><span class="pun">.</span><span class="pln">submit</span><span class="pun">(</span><span class="pln">cleanupCallable</span><span class="pun">);</span></li><li><a name="402"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="403"></a></li><li><a name="404"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Snapshot</span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">sequenceNumber</span><span class="pun">,</span><span class="pln"> ins</span><span class="pun">);</span></li><li><a name="405"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="406"></a></li><li><a name="407"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="408"></a><span class="com">     * Returns an editor for the entry named {@code key}, or null if another</span></li><li><a name="409"></a><span class="com">     * edit is in progress.</span></li><li><a name="410"></a><span class="com">     */</span></li><li><a name="411"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Editor</span><span class="pln"> edit</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> key</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="412"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> edit</span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> ANY_SEQUENCE_NUMBER</span><span class="pun">);</span></li><li><a name="413"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="414"></a></li><li><a name="415"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="typ">Editor</span><span class="pln"> edit</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> expectedSequenceNumber</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="416"></a><span class="pln">        checkNotClosed</span><span class="pun">();</span></li><li><a name="417"></a><span class="pln">        validateKey</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="418"></a><span class="pln">        </span><span class="typ">Entry</span><span class="pln"> entry </span><span class="pun">=</span><span class="pln"> lruEntries</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="419"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">expectedSequenceNumber </span><span class="pun">!=</span><span class="pln"> ANY_SEQUENCE_NUMBER</span></li><li><a name="420"></a><span class="pln">                </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">sequenceNumber </span><span class="pun">!=</span><span class="pln"> expectedSequenceNumber</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="421"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln"> </span><span class="com">// snapshot is stale</span></li><li><a name="422"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="423"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="424"></a><span class="pln">            entry </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Entry</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="425"></a><span class="pln">            lruEntries</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> entry</span><span class="pun">);</span></li><li><a name="426"></a><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="427"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln"> </span><span class="com">// another edit is in progress</span></li><li><a name="428"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="429"></a></li><li><a name="430"></a><span class="pln">        </span><span class="typ">Editor</span><span class="pln"> editor </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Editor</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">);</span></li><li><a name="431"></a><span class="pln">        entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">=</span><span class="pln"> editor</span><span class="pun">;</span></li><li><a name="432"></a></li><li><a name="433"></a><span class="pln">        </span><span class="com">// flush the journal before creating files to prevent file leaks</span></li><li><a name="434"></a><span class="pln">        journalWriter</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">DIRTY </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39; &#39;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> key </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39;\n&#39;</span><span class="pun">);</span></li><li><a name="435"></a><span class="pln">        journalWriter</span><span class="pun">.</span><span class="pln">flush</span><span class="pun">();</span></li><li><a name="436"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> editor</span><span class="pun">;</span></li><li><a name="437"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="438"></a></li><li><a name="439"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="440"></a><span class="com">     * Returns the directory where this cache stores its data.</span></li><li><a name="441"></a><span class="com">     */</span></li><li><a name="442"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">File</span><span class="pln"> getDirectory</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="443"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> directory</span><span class="pun">;</span></li><li><a name="444"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="445"></a></li><li><a name="446"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="447"></a><span class="com">     * Returns the maximum number of bytes that this cache should use to store</span></li><li><a name="448"></a><span class="com">     * its data.</span></li><li><a name="449"></a><span class="com">     */</span></li><li><a name="450"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> maxSize</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="451"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> maxSize</span><span class="pun">;</span></li><li><a name="452"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="453"></a></li><li><a name="454"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="455"></a><span class="com">     * Returns the number of bytes currently being used to store the values in</span></li><li><a name="456"></a><span class="com">     * this cache. This may be greater than the max size if a background</span></li><li><a name="457"></a><span class="com">     * deletion is pending.</span></li><li><a name="458"></a><span class="com">     */</span></li><li><a name="459"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="460"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> size</span><span class="pun">;</span></li><li><a name="461"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="462"></a></li><li><a name="463"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> completeEdit</span><span class="pun">(</span><span class="typ">Editor</span><span class="pln"> editor</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> success</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="464"></a><span class="pln">        </span><span class="typ">Entry</span><span class="pln"> entry </span><span class="pun">=</span><span class="pln"> editor</span><span class="pun">.</span><span class="pln">entry</span><span class="pun">;</span></li><li><a name="465"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">!=</span><span class="pln"> editor</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="466"></a><span class="pln">            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalStateException</span><span class="pun">();</span></li><li><a name="467"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="468"></a></li><li><a name="469"></a><span class="pln">        </span><span class="com">// if this edit is creating the entry for the first time, every index must have a value</span></li><li><a name="470"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">success </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">!</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">readable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="471"></a><span class="pln">            </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> valueCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="472"></a><span class="pln">                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">editor</span><span class="pun">.</span><span class="pln">written</span><span class="pun">[</span><span class="pln">i</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="473"></a><span class="pln">                    editor</span><span class="pun">.</span><span class="pln">abort</span><span class="pun">();</span></li><li><a name="474"></a><span class="pln">                    </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalStateException</span><span class="pun">(</span><span class="str">&quot;Newly created entry didn&#39;t create value for index &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> i</span><span class="pun">);</span></li><li><a name="475"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="476"></a><span class="pln">                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">getDirtyFile</span><span class="pun">(</span><span class="pln">i</span><span class="pun">).</span><span class="pln">exists</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="477"></a><span class="pln">                    editor</span><span class="pun">.</span><span class="pln">abort</span><span class="pun">();</span></li><li><a name="478"></a><span class="pln">                    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">logW</span><span class="pun">(</span><span class="str">&quot;DiskLruCache: Newly created entry doesn&#39;t have file for index &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> i</span><span class="pun">);</span></li><li><a name="479"></a><span class="pln">                    </span><span class="kwd">return</span><span class="pun">;</span></li><li><a name="480"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="481"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="482"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="483"></a></li><li><a name="484"></a><span class="pln">        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> valueCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="485"></a><span class="pln">            </span><span class="typ">File</span><span class="pln"> dirty </span><span class="pun">=</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">getDirtyFile</span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span></li><li><a name="486"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">success</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="487"></a><span class="pln">                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">dirty</span><span class="pun">.</span><span class="pln">exists</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="488"></a><span class="pln">                    </span><span class="typ">File</span><span class="pln"> clean </span><span class="pun">=</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">getCleanFile</span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span></li><li><a name="489"></a><span class="pln">                    dirty</span><span class="pun">.</span><span class="pln">renameTo</span><span class="pun">(</span><span class="pln">clean</span><span class="pun">);</span></li><li><a name="490"></a><span class="pln">                    </span><span class="kwd">long</span><span class="pln"> oldLength </span><span class="pun">=</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">lengths</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span></li><li><a name="491"></a><span class="pln">                    </span><span class="kwd">long</span><span class="pln"> newLength </span><span class="pun">=</span><span class="pln"> clean</span><span class="pun">.</span><span class="pln">length</span><span class="pun">();</span></li><li><a name="492"></a><span class="pln">                    entry</span><span class="pun">.</span><span class="pln">lengths</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> newLength</span><span class="pun">;</span></li><li><a name="493"></a><span class="pln">                    size </span><span class="pun">=</span><span class="pln"> size </span><span class="pun">-</span><span class="pln"> oldLength </span><span class="pun">+</span><span class="pln"> newLength</span><span class="pun">;</span></li><li><a name="494"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="495"></a><span class="pln">            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="496"></a><span class="pln">                deleteIfExists</span><span class="pun">(</span><span class="pln">dirty</span><span class="pun">);</span></li><li><a name="497"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="498"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="499"></a></li><li><a name="500"></a><span class="pln">        redundantOpCount</span><span class="pun">++;</span></li><li><a name="501"></a><span class="pln">        entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="502"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">readable </span><span class="pun">|</span><span class="pln"> success</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="503"></a><span class="pln">            entry</span><span class="pun">.</span><span class="pln">readable </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span></li><li><a name="504"></a><span class="pln">            journalWriter</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">CLEAN </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39; &#39;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">key </span><span class="pun">+</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">getLengths</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39;\n&#39;</span><span class="pun">);</span></li><li><a name="505"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">success</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="506"></a><span class="pln">                entry</span><span class="pun">.</span><span class="pln">sequenceNumber </span><span class="pun">=</span><span class="pln"> nextSequenceNumber</span><span class="pun">++;</span></li><li><a name="507"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="508"></a><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="509"></a><span class="pln">            lruEntries</span><span class="pun">.</span><span class="pln">remove</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="510"></a><span class="pln">            journalWriter</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">REMOVE </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39; &#39;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">key </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39;\n&#39;</span><span class="pun">);</span></li><li><a name="511"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="512"></a></li><li><a name="513"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">size </span><span class="pun">&gt;</span><span class="pln"> maxSize </span><span class="pun">||</span><span class="pln"> journalRebuildRequired</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="514"></a><span class="pln">            executorService</span><span class="pun">.</span><span class="pln">submit</span><span class="pun">(</span><span class="pln">cleanupCallable</span><span class="pun">);</span></li><li><a name="515"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="516"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="517"></a></li><li><a name="518"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="519"></a><span class="com">     * We only rebuild the journal when it will halve the size of the journal</span></li><li><a name="520"></a><span class="com">     * and eliminate at least 2000 ops.</span></li><li><a name="521"></a><span class="com">     */</span></li><li><a name="522"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> journalRebuildRequired</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="523"></a><span class="pln">        </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> REDUNDANT_OP_COMPACT_THRESHOLD </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2000</span><span class="pun">;</span></li><li><a name="524"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> redundantOpCount </span><span class="pun">&gt;=</span><span class="pln"> REDUNDANT_OP_COMPACT_THRESHOLD</span></li><li><a name="525"></a><span class="pln">                </span><span class="pun">&amp;&amp;</span><span class="pln"> redundantOpCount </span><span class="pun">&gt;=</span><span class="pln"> lruEntries</span><span class="pun">.</span><span class="pln">size</span><span class="pun">();</span></li><li><a name="526"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="527"></a></li><li><a name="528"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="529"></a><span class="com">     * Drops the entry for {@code key} if it exists and can be removed. Entries</span></li><li><a name="530"></a><span class="com">     * actively being edited cannot be removed.</span></li><li><a name="531"></a><span class="com">     *</span></li><li><a name="532"></a><span class="com">     * @return true if an entry was removed.</span></li><li><a name="533"></a><span class="com">     */</span></li><li><a name="534"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> remove</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> key</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="535"></a><span class="pln">        checkNotClosed</span><span class="pun">();</span></li><li><a name="536"></a><span class="pln">        validateKey</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="537"></a><span class="pln">        </span><span class="typ">Entry</span><span class="pln"> entry </span><span class="pun">=</span><span class="pln"> lruEntries</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="538"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="539"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span></li><li><a name="540"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="541"></a></li><li><a name="542"></a><span class="pln">        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> valueCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="543"></a><span class="pln">            </span><span class="typ">File</span><span class="pln"> file </span><span class="pun">=</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">getCleanFile</span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span></li><li><a name="544"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">file</span><span class="pun">.</span><span class="kwd">delete</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="545"></a><span class="pln">                </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IOException</span><span class="pun">(</span><span class="str">&quot;failed to delete &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> file</span><span class="pun">);</span></li><li><a name="546"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="547"></a><span class="pln">            size </span><span class="pun">-=</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">lengths</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span></li><li><a name="548"></a><span class="pln">            entry</span><span class="pun">.</span><span class="pln">lengths</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></li><li><a name="549"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="550"></a></li><li><a name="551"></a><span class="pln">        redundantOpCount</span><span class="pun">++;</span></li><li><a name="552"></a><span class="pln">        journalWriter</span><span class="pun">.</span><span class="pln">append</span><span class="pun">(</span><span class="pln">REMOVE </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39; &#39;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> key </span><span class="pun">+</span><span class="pln"> </span><span class="str">&#39;\n&#39;</span><span class="pun">);</span></li><li><a name="553"></a><span class="pln">        lruEntries</span><span class="pun">.</span><span class="pln">remove</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></li><li><a name="554"></a></li><li><a name="555"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">journalRebuildRequired</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="556"></a><span class="pln">            executorService</span><span class="pun">.</span><span class="pln">submit</span><span class="pun">(</span><span class="pln">cleanupCallable</span><span class="pun">);</span></li><li><a name="557"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="558"></a></li><li><a name="559"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span></li><li><a name="560"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="561"></a></li><li><a name="562"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="563"></a><span class="com">     * Returns true if this cache has been closed.</span></li><li><a name="564"></a><span class="com">     */</span></li><li><a name="565"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> isClosed</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="566"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> journalWriter </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="567"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="568"></a></li><li><a name="569"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> checkNotClosed</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="570"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">journalWriter </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="571"></a><span class="pln">            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalStateException</span><span class="pun">(</span><span class="str">&quot;cache is closed&quot;</span><span class="pun">);</span></li><li><a name="572"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="573"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="574"></a></li><li><a name="575"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="576"></a><span class="com">     * Force buffered operations to the filesystem.</span></li><li><a name="577"></a><span class="com">     */</span></li><li><a name="578"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> flush</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="579"></a><span class="pln">        checkNotClosed</span><span class="pun">();</span></li><li><a name="580"></a><span class="pln">        trimToSize</span><span class="pun">();</span></li><li><a name="581"></a><span class="pln">        journalWriter</span><span class="pun">.</span><span class="pln">flush</span><span class="pun">();</span></li><li><a name="582"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="583"></a></li><li><a name="584"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="585"></a><span class="com">     * Closes this cache. Stored values will remain on the filesystem.</span></li><li><a name="586"></a><span class="com">     */</span></li><li><a name="587"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> close</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="588"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">journalWriter </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="589"></a><span class="pln">            </span><span class="kwd">return</span><span class="pun">;</span><span class="pln"> </span><span class="com">// already closed</span></li><li><a name="590"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="591"></a><span class="pln">        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Entry</span><span class="pln"> entry </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayList</span><span class="pun">&lt;</span><span class="typ">Entry</span><span class="pun">&gt;(</span><span class="pln">lruEntries</span><span class="pun">.</span><span class="pln">values</span><span class="pun">()))</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="592"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="593"></a><span class="pln">                entry</span><span class="pun">.</span><span class="pln">currentEditor</span><span class="pun">.</span><span class="pln">abort</span><span class="pun">();</span></li><li><a name="594"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="595"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="596"></a><span class="pln">        trimToSize</span><span class="pun">();</span></li><li><a name="597"></a><span class="pln">        journalWriter</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span></li><li><a name="598"></a><span class="pln">        journalWriter </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="599"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="600"></a></li><li><a name="601"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> trimToSize</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="602"></a><span class="pln">        </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">size </span><span class="pun">&gt;</span><span class="pln"> maxSize</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="603"></a><span class="pln">            </span><span class="typ">Map</span><span class="pun">.</span><span class="typ">Entry</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Entry</span><span class="pun">&gt;</span><span class="pln"> toEvict </span><span class="pun">=</span><span class="pln"> lruEntries</span><span class="pun">.</span><span class="pln">eldest</span><span class="pun">();</span></li><li><a name="604"></a><span class="pln">            remove</span><span class="pun">(</span><span class="pln">toEvict</span><span class="pun">.</span><span class="pln">getKey</span><span class="pun">());</span></li><li><a name="605"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="606"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="607"></a></li><li><a name="608"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="609"></a><span class="com">     * Closes the cache and deletes all of its stored values. This will delete</span></li><li><a name="610"></a><span class="com">     * all files in the cache directory including files that weren&#39;t created by</span></li><li><a name="611"></a><span class="com">     * the cache.</span></li><li><a name="612"></a><span class="com">     */</span></li><li><a name="613"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="kwd">delete</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="614"></a><span class="pln">        close</span><span class="pun">();</span></li><li><a name="615"></a><span class="pln">        </span><span class="typ">IoUtils</span><span class="pun">.</span><span class="pln">deleteContents</span><span class="pun">(</span><span class="pln">directory</span><span class="pun">);</span></li><li><a name="616"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="617"></a></li><li><a name="618"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> validateKey</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> key</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="619"></a><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">key</span><span class="pun">.</span><span class="pln">contains</span><span class="pun">(</span><span class="str">&quot; &quot;</span><span class="pun">)</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> key</span><span class="pun">.</span><span class="pln">contains</span><span class="pun">(</span><span class="str">&quot;\n&quot;</span><span class="pun">)</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> key</span><span class="pun">.</span><span class="pln">contains</span><span class="pun">(</span><span class="str">&quot;\r&quot;</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="620"></a><span class="pln">            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span></li><li><a name="621"></a><span class="pln">                    </span><span class="str">&quot;keys must not contain spaces or newlines: \&quot;&quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> key </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot;\&quot;&quot;</span><span class="pun">);</span></li><li><a name="622"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="623"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="624"></a></li><li><a name="625"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> inputStreamToString</span><span class="pun">(</span><span class="typ">InputStream</span><span class="pln"> in</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="626"></a><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">Streams</span><span class="pun">.</span><span class="pln">readFully</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">InputStreamReader</span><span class="pun">(</span><span class="pln">in</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Charsets</span><span class="pun">.</span><span class="pln">UTF_8</span><span class="pun">));</span></li><li><a name="627"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="628"></a></li><li><a name="629"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="630"></a><span class="com">     * A snapshot of the values for an entry.</span></li><li><a name="631"></a><span class="com">     */</span></li><li><a name="632"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Snapshot</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Closeable</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="633"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> key</span><span class="pun">;</span></li><li><a name="634"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> sequenceNumber</span><span class="pun">;</span></li><li><a name="635"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">InputStream</span><span class="pun">[]</span><span class="pln"> ins</span><span class="pun">;</span></li><li><a name="636"></a></li><li><a name="637"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Snapshot</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> sequenceNumber</span><span class="pun">,</span><span class="pln"> </span><span class="typ">InputStream</span><span class="pun">[]</span><span class="pln"> ins</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="638"></a><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">key </span><span class="pun">=</span><span class="pln"> key</span><span class="pun">;</span></li><li><a name="639"></a><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">sequenceNumber </span><span class="pun">=</span><span class="pln"> sequenceNumber</span><span class="pun">;</span></li><li><a name="640"></a><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">ins </span><span class="pun">=</span><span class="pln"> ins</span><span class="pun">;</span></li><li><a name="641"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="642"></a></li><li><a name="643"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="644"></a><span class="com">         * Returns an editor for this snapshot&#39;s entry, or null if either the</span></li><li><a name="645"></a><span class="com">         * entry has changed since this snapshot was created or if another edit</span></li><li><a name="646"></a><span class="com">         * is in progress.</span></li><li><a name="647"></a><span class="com">         */</span></li><li><a name="648"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Editor</span><span class="pln"> edit</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="649"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">DiskLruCache</span><span class="pun">.</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">edit</span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> sequenceNumber</span><span class="pun">);</span></li><li><a name="650"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="651"></a></li><li><a name="652"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="653"></a><span class="com">         * Returns the unbuffered stream with the value for {@code index}.</span></li><li><a name="654"></a><span class="com">         */</span></li><li><a name="655"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">InputStream</span><span class="pln"> getInputStream</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="656"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> ins</span><span class="pun">[</span><span class="pln">index</span><span class="pun">];</span></li><li><a name="657"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="658"></a></li><li><a name="659"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="660"></a><span class="com">         * Returns the string value for {@code index}.</span></li><li><a name="661"></a><span class="com">         */</span></li><li><a name="662"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> getString</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="663"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> inputStreamToString</span><span class="pun">(</span><span class="pln">getInputStream</span><span class="pun">(</span><span class="pln">index</span><span class="pun">));</span></li><li><a name="664"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="665"></a></li><li><a name="666"></a><span class="pln">        </span><span class="lit">@Override</span><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> close</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="667"></a><span class="pln">            </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">InputStream</span><span class="pln"> in </span><span class="pun">:</span><span class="pln"> ins</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="668"></a><span class="pln">                </span><span class="typ">IoUtils</span><span class="pun">.</span><span class="pln">closeQuietly</span><span class="pun">(</span><span class="pln">in</span><span class="pun">);</span></li><li><a name="669"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="670"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="671"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="672"></a></li><li><a name="673"></a><span class="pln">    </span><span class="com">/**</span></li><li><a name="674"></a><span class="com">     * Edits the values for an entry.</span></li><li><a name="675"></a><span class="com">     */</span></li><li><a name="676"></a><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Editor</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="677"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">Entry</span><span class="pln"> entry</span><span class="pun">;</span></li><li><a name="678"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pun">[]</span><span class="pln"> written</span><span class="pun">;</span></li><li><a name="679"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> hasErrors</span><span class="pun">;</span></li><li><a name="680"></a></li><li><a name="681"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Editor</span><span class="pun">(</span><span class="typ">Entry</span><span class="pln"> entry</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="682"></a><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">entry </span><span class="pun">=</span><span class="pln"> entry</span><span class="pun">;</span></li><li><a name="683"></a><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">written </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">readable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pun">[</span><span class="pln">valueCount</span><span class="pun">];</span></li><li><a name="684"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="685"></a></li><li><a name="686"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="687"></a><span class="com">         * Returns an unbuffered input stream to read the last committed value,</span></li><li><a name="688"></a><span class="com">         * or null if no value has been committed.</span></li><li><a name="689"></a><span class="com">         */</span></li><li><a name="690"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">InputStream</span><span class="pln"> newInputStream</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="691"></a><span class="pln">            </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="typ">DiskLruCache</span><span class="pun">.</span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="692"></a><span class="pln">                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="693"></a><span class="pln">                    </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalStateException</span><span class="pun">();</span></li><li><a name="694"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="695"></a><span class="pln">                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">readable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="696"></a><span class="pln">                    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="697"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="698"></a><span class="pln">                </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileInputStream</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">getCleanFile</span><span class="pun">(</span><span class="pln">index</span><span class="pun">));</span></li><li><a name="699"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="700"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="701"></a></li><li><a name="702"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="703"></a><span class="com">         * Returns the last committed value as a string, or null if no value</span></li><li><a name="704"></a><span class="com">         * has been committed.</span></li><li><a name="705"></a><span class="com">         */</span></li><li><a name="706"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> getString</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="707"></a><span class="pln">            </span><span class="typ">InputStream</span><span class="pln"> in </span><span class="pun">=</span><span class="pln"> newInputStream</span><span class="pun">(</span><span class="pln">index</span><span class="pun">);</span></li><li><a name="708"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> in </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> inputStreamToString</span><span class="pun">(</span><span class="pln">in</span><span class="pun">)</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="709"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="710"></a></li><li><a name="711"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="712"></a><span class="com">         * Returns a new unbuffered output stream to write the value at</span></li><li><a name="713"></a><span class="com">         * {@code index}. If the underlying output stream encounters errors</span></li><li><a name="714"></a><span class="com">         * when writing to the filesystem, this edit will be aborted when</span></li><li><a name="715"></a><span class="com">         * {@link #commit} is called. The returned output stream does not throw</span></li><li><a name="716"></a><span class="com">         * IOExceptions.</span></li><li><a name="717"></a><span class="com">         */</span></li><li><a name="718"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">OutputStream</span><span class="pln"> newOutputStream</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="719"></a><span class="pln">            </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="typ">DiskLruCache</span><span class="pun">.</span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="720"></a><span class="pln">                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">currentEditor </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="721"></a><span class="pln">                    </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalStateException</span><span class="pun">();</span></li><li><a name="722"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="723"></a><span class="pln">                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">readable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="724"></a><span class="pln">                    written</span><span class="pun">[</span><span class="pln">index</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span></li><li><a name="725"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="726"></a><span class="pln">                </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FaultHidingOutputStream</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileOutputStream</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">getDirtyFile</span><span class="pun">(</span><span class="pln">index</span><span class="pun">)));</span></li><li><a name="727"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="728"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="729"></a></li><li><a name="730"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="731"></a><span class="com">         * Sets the value at {@code index} to {@code value}.</span></li><li><a name="732"></a><span class="com">         */</span></li><li><a name="733"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> set</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> value</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="734"></a><span class="pln">            </span><span class="typ">Writer</span><span class="pln"> writer </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li><a name="735"></a><span class="pln">            </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="736"></a><span class="pln">                writer </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">OutputStreamWriter</span><span class="pun">(</span><span class="pln">newOutputStream</span><span class="pun">(</span><span class="pln">index</span><span class="pun">),</span><span class="pln"> </span><span class="typ">Charsets</span><span class="pun">.</span><span class="pln">UTF_8</span><span class="pun">);</span></li><li><a name="737"></a><span class="pln">                writer</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">value</span><span class="pun">);</span></li><li><a name="738"></a><span class="pln">            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">finally</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="739"></a><span class="pln">                </span><span class="typ">IoUtils</span><span class="pun">.</span><span class="pln">closeQuietly</span><span class="pun">(</span><span class="pln">writer</span><span class="pun">);</span></li><li><a name="740"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="741"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="742"></a></li><li><a name="743"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="744"></a><span class="com">         * Commits this edit so it is visible to readers.  This releases the</span></li><li><a name="745"></a><span class="com">         * edit lock so another edit may be started on the same key.</span></li><li><a name="746"></a><span class="com">         */</span></li><li><a name="747"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> commit</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="748"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">hasErrors</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="749"></a><span class="pln">                completeEdit</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span></li><li><a name="750"></a><span class="pln">                remove</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">key</span><span class="pun">);</span><span class="pln"> </span><span class="com">// the previous entry is stale</span></li><li><a name="751"></a><span class="pln">            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="752"></a><span class="pln">                completeEdit</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span></li><li><a name="753"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="754"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="755"></a></li><li><a name="756"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="757"></a><span class="com">         * Aborts this edit. This releases the edit lock so another edit may be</span></li><li><a name="758"></a><span class="com">         * started on the same key.</span></li><li><a name="759"></a><span class="com">         */</span></li><li><a name="760"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> abort</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="761"></a><span class="pln">            completeEdit</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span></li><li><a name="762"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="763"></a></li><li><a name="764"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FaultHidingOutputStream</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">FilterOutputStream</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="765"></a><span class="pln">            </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">FaultHidingOutputStream</span><span class="pun">(</span><span class="typ">OutputStream</span><span class="pln"> out</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="766"></a><span class="pln">                </span><span class="kwd">super</span><span class="pun">(</span><span class="pln">out</span><span class="pun">);</span></li><li><a name="767"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="768"></a></li><li><a name="769"></a><span class="pln">            </span><span class="lit">@Override</span><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> write</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> oneByte</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="770"></a><span class="pln">                </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="771"></a><span class="pln">                    out</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">oneByte</span><span class="pun">);</span></li><li><a name="772"></a><span class="pln">                </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="773"></a><span class="pln">                    hasErrors </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span></li><li><a name="774"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="775"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="776"></a></li><li><a name="777"></a><span class="pln">            </span><span class="lit">@Override</span><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> write</span><span class="pun">(</span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> buffer</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> offset</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="778"></a><span class="pln">                </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="779"></a><span class="pln">                    out</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">buffer</span><span class="pun">,</span><span class="pln"> offset</span><span class="pun">,</span><span class="pln"> length</span><span class="pun">);</span></li><li><a name="780"></a><span class="pln">                </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="781"></a><span class="pln">                    hasErrors </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span></li><li><a name="782"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="783"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="784"></a></li><li><a name="785"></a><span class="pln">            </span><span class="lit">@Override</span><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> close</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="786"></a><span class="pln">                </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="787"></a><span class="pln">                    out</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span></li><li><a name="788"></a><span class="pln">                </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="789"></a><span class="pln">                    hasErrors </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span></li><li><a name="790"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="791"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="792"></a></li><li><a name="793"></a><span class="pln">            </span><span class="lit">@Override</span><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> flush</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="794"></a><span class="pln">                </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="795"></a><span class="pln">                    out</span><span class="pun">.</span><span class="pln">flush</span><span class="pun">();</span></li><li><a name="796"></a><span class="pln">                </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="797"></a><span class="pln">                    hasErrors </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span></li><li><a name="798"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="799"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="800"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="801"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="802"></a></li><li><a name="803"></a><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Entry</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="804"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> key</span><span class="pun">;</span></li><li><a name="805"></a></li><li><a name="806"></a><span class="pln">        </span><span class="com">/** Lengths of this entry&#39;s files. */</span></li><li><a name="807"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">long</span><span class="pun">[]</span><span class="pln"> lengths</span><span class="pun">;</span></li><li><a name="808"></a></li><li><a name="809"></a><span class="pln">        </span><span class="com">/** True if this entry has ever been published */</span></li><li><a name="810"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> readable</span><span class="pun">;</span></li><li><a name="811"></a></li><li><a name="812"></a><span class="pln">        </span><span class="com">/** The ongoing edit or null if this entry is not being edited. */</span></li><li><a name="813"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Editor</span><span class="pln"> currentEditor</span><span class="pun">;</span></li><li><a name="814"></a></li><li><a name="815"></a><span class="pln">        </span><span class="com">/** The sequence number of the most recently committed edit to this entry. */</span></li><li><a name="816"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> sequenceNumber</span><span class="pun">;</span></li><li><a name="817"></a></li><li><a name="818"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Entry</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> key</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="819"></a><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">key </span><span class="pun">=</span><span class="pln"> key</span><span class="pun">;</span></li><li><a name="820"></a><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">lengths </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">long</span><span class="pun">[</span><span class="pln">valueCount</span><span class="pun">];</span></li><li><a name="821"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="822"></a></li><li><a name="823"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> getLengths</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="824"></a><span class="pln">            </span><span class="typ">StringBuilder</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">StringBuilder</span><span class="pun">();</span></li><li><a name="825"></a><span class="pln">            </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">long</span><span class="pln"> size </span><span class="pun">:</span><span class="pln"> lengths</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="826"></a><span class="pln">                result</span><span class="pun">.</span><span class="pln">append</span><span class="pun">(</span><span class="str">&#39; &#39;</span><span class="pun">).</span><span class="pln">append</span><span class="pun">(</span><span class="pln">size</span><span class="pun">);</span></li><li><a name="827"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="828"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> result</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">();</span></li><li><a name="829"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="830"></a></li><li><a name="831"></a><span class="pln">        </span><span class="com">/**</span></li><li><a name="832"></a><span class="com">         * Set lengths using decimal numbers like &quot;10123&quot;.</span></li><li><a name="833"></a><span class="com">         */</span></li><li><a name="834"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> setLengths</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> strings</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="835"></a><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">strings</span><span class="pun">.</span><span class="pln">length </span><span class="pun">!=</span><span class="pln"> valueCount</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="836"></a><span class="pln">                </span><span class="kwd">throw</span><span class="pln"> invalidLengths</span><span class="pun">(</span><span class="pln">strings</span><span class="pun">);</span></li><li><a name="837"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="838"></a></li><li><a name="839"></a><span class="pln">            </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="840"></a><span class="pln">                </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> strings</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="841"></a><span class="pln">                    lengths</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Long</span><span class="pun">.</span><span class="pln">parseLong</span><span class="pun">(</span><span class="pln">strings</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]);</span></li><li><a name="842"></a><span class="pln">                </span><span class="pun">}</span></li><li><a name="843"></a><span class="pln">            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">NumberFormatException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="844"></a><span class="pln">                </span><span class="kwd">throw</span><span class="pln"> invalidLengths</span><span class="pun">(</span><span class="pln">strings</span><span class="pun">);</span></li><li><a name="845"></a><span class="pln">            </span><span class="pun">}</span></li><li><a name="846"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="847"></a></li><li><a name="848"></a><span class="pln">        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> invalidLengths</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> strings</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="849"></a><span class="pln">            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IOException</span><span class="pun">(</span><span class="str">&quot;unexpected journal line: &quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="typ">Arrays</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">(</span><span class="pln">strings</span><span class="pun">));</span></li><li><a name="850"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="851"></a></li><li><a name="852"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">File</span><span class="pln"> getCleanFile</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="853"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">File</span><span class="pun">(</span><span class="pln">directory</span><span class="pun">,</span><span class="pln"> key </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot;.&quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> i</span><span class="pun">);</span></li><li><a name="854"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="855"></a></li><li><a name="856"></a><span class="pln">        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">File</span><span class="pln"> getDirtyFile</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li><a name="857"></a><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">File</span><span class="pun">(</span><span class="pln">directory</span><span class="pun">,</span><span class="pln"> key </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot;.&quot;</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> i </span><span class="pun">+</span><span class="pln"> </span><span class="str">&quot;.tmp&quot;</span><span class="pun">);</span></li><li><a name="858"></a><span class="pln">        </span><span class="pun">}</span></li><li><a name="859"></a><span class="pln">    </span><span class="pun">}</span></li><li><a name="860"></a><span class="pun">}</span></li></ol><div class="footer">Powered by <a href="https://code.google.com/p/gitiles/">Gitiles</a></div></body></html>